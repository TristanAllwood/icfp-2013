Numbers of given programs of a given size
{:size=>3, :count=>20}
{:size=>4, :count=>20}
{:size=>5, :count=>20}
{:size=>6, :count=>20}
{:size=>7, :count=>20}
{:size=>8, :count=>40}
{:size=>9, :count=>40}
{:size=>10, :count=>40}
{:size=>11, :count=>60}
{:size=>12, :count=>60}
{:size=>13, :count=>60}
{:size=>14, :count=>60}
{:size=>15, :count=>60}
{:size=>16, :count=>60}
{:size=>17, :count=>60}
{:size=>18, :count=>60}
{:size=>19, :count=>60}
{:size=>20, :count=>60}
{:size=>21, :count=>60}
{:size=>22, :count=>60}
{:size=>23, :count=>60}
{:size=>24, :count=>60}
{:size=>25, :count=>60}
{:size=>26, :count=>60}
{:size=>27, :count=>60}
{:size=>28, :count=>60}
{:size=>29, :count=>60}
{:size=>30, :count=>60}

Number of program skeletons for a given size:
[(0,1),(1,2),(1,3),(2,4),(6,5),(25,6),(122,7),(1156,8),(21602,9),(1561112,10)]


Training problem of size 30ish:
{
    "id": "LU8x7ByMOLoBdvVVI4gXhAYr",
    "size": 29,
    "operators": [
        "and",
        "fold",
        "if0",
        "not",
        "or",
        "plus",
        "shl1",
        "shr1",
        "shr16",
        "xor"
    ],
    "challenge": "(lambda (x_75956) (fold (xor (shl1 x_75956) (shr1 (or (xor 1 (shr16 (shl1 (shr1 (and (if0 (shr1 (shr1 (not (shr1 x_75956)))) x_75956 1) 0))))) 0))) 0 (lambda (x_75957 x_75958) (plus (shl1 x_75958) x_75957))))"
}


